Writing header for result data file:
# TestName Variant NumThreads   MinTime MedianTime MaxTime  Productivity1 Productivity2 Productivity3
#    
# Thu Mar 28 21:06:27 EDT 2013
# Linux lenny 3.5.0-24-generic #37-Ubuntu SMP Thu Feb 7 01:50:30 UTC 2013 x86_64 x86_64 x86_64 GNU/Linux
# Ran by: lkuper 
# Determined machine to have 4 hardware threads.
# The Glorious Glasgow Haskell Compilation System, version 7.4.2
# 
# Running each test for 1 trial(s).
#  ... with compiler options: -O2 -rtsopts
#  ... with runtime options: -qa  -s 
# Benchmarks_File: benchlist.txt
# Benchmarks_Variant: desktop
# Benchmarks_Version: 2.0
# Git_Branch: master
# Git_Hash: 09cee3f9e09a78ed58941b90f95301a6cde1d8c1
# Git_Depth: 173
# Using the following settings from environment variables:
#  ENV BENCHLIST=
#  ENV THREADS=   1 2 4
#  ENV TRIALS=    1
#  ENV SHORTRUN=  
#  ENV SCHEDS=    
#  ENV KEEPGOING= 
#  ENV GHC=       
#  ENV GHC_FLAGS= 
#  ENV GHC_RTS=   
#  ENV ENVS=      
Before testing, first 'make clean' for hygiene.
 -> Cleaning Succeeded.

--------------------------------------------------------------------------------
Running all benchmarks for all thread settings in [1,2,4]
Running for all schedulers in: [Trace,Direct,Sparks,SMP,None]
Testing 486 total configurations of 162 benchmarks
--------------------------------------------------------------------------------
Not using Cabal.  Attempting to build the old fashioned way.

--------------------------------------------------------------------------------
  Compiling Config 1 of 2: BFS_LVar (args "") scheduler None threaded
--------------------------------------------------------------------------------

First, creating a directory for intermediate compiler files: build/BFS_LVar_None_threaded_2036819265318608010
Next figure out what kind of benchmark this is by poking around the file system: 
  Checking for: BFS_LVar.hs
  Checking for: ./Makefile
Compiling with a single GHC command: 
  ghc --make  -i./ -outputdir build/BFS_LVar_None_threaded_2036819265318608010 -O2 -rtsopts -threaded -fforce-recomp -DPARSCHED="qualified Control.Monad.Par as NotUsed" BFS_LVar.hs -o ./bin/BFS_LVar_None_threaded.exe

    [1 of 3] Compiling Common           ( Common.hs, build/BFS_LVar_None_threaded_2036819265318608010/Common.o )
    [2 of 3] Compiling LVarTraceIO      ( LVarTraceIO.hs, build/BFS_LVar_None_threaded_2036819265318608010/LVarTraceIO.o )
    
    LVarTraceIO.hs:253:4: Warning: Defined but not used: `poll'
    
    LVarTraceIO.hs:254:4: Warning: Defined but not used: `woken'
    
    LVarTraceIO.hs:318:19: Warning: Defined but not used: `fn'
    
    LVarTraceIO.hs:547:1: Warning: Defined but not used: `runParAsync'
    [3 of 3] Compiling Main             ( BFS_LVar.hs, build/BFS_LVar_None_threaded_2036819265318608010/Main.o )
    Linking ./bin/BFS_LVar_None_threaded.exe ...

--------------------------------------------------------------------------------
  Compiling Config 2 of 2: BFS_Strategies (args "") scheduler None threaded
--------------------------------------------------------------------------------

First, creating a directory for intermediate compiler files: build/BFS_Strategies_None_threaded_6602340101293474609
Next figure out what kind of benchmark this is by poking around the file system: 
  Checking for: BFS_Strategies.hs
  Checking for: ./Makefile
Compiling with a single GHC command: 
  ghc --make  -i./ -outputdir build/BFS_Strategies_None_threaded_6602340101293474609 -O2 -rtsopts -threaded -fforce-recomp -DPARSCHED="qualified Control.Monad.Par as NotUsed" BFS_Strategies.hs -o ./bin/BFS_Strategies_None_threaded.exe

    [1 of 3] Compiling Common           ( Common.hs, build/BFS_Strategies_None_threaded_6602340101293474609/Common.o )
    [2 of 3] Compiling LVarTraceIO      ( LVarTraceIO.hs, build/BFS_Strategies_None_threaded_6602340101293474609/LVarTraceIO.o )
    
    LVarTraceIO.hs:253:4: Warning: Defined but not used: `poll'
    
    LVarTraceIO.hs:254:4: Warning: Defined but not used: `woken'
    
    LVarTraceIO.hs:318:19: Warning: Defined but not used: `fn'
    
    LVarTraceIO.hs:547:1: Warning: Defined but not used: `runParAsync'
    [3 of 3] Compiling Main             ( BFS_Strategies.hs, build/BFS_Strategies_None_threaded_6602340101293474609/Main.o )
    Linking ./bin/BFS_Strategies_None_threaded.exe ...

--------------------------------------------------------------------------------
  Running Config 1 of 486: BFS_LVar (args "/tmp/rand_40000_10000 5 1000") scheduler None  threads 1 (Env=[])
--------------------------------------------------------------------------------

(In directory /home/lkuper/repos/lvars/haskell-prototype)
Next run 'who', reporting users other than the current user.  This may help with detectivework.
Who_Output: 
Executing: ./ntimes_minmedmax 1 ./bin/BFS_LVar_None_threaded.exe /tmp/rand_40000_10000 5 1000 +RTS  -s  -qa  -s  -N1 -RTS
REALTIME 1.229421s 1.229421s 1.229421s
PRODUCTIVITY 97.260 97.260 97.260
Execution log file: 
   ./runs/2013.03.28_BFS_LVar_None_threaded.exe__1364519191_1.log

Running trial 1 of 1:
------------------------------------------------------------
 * Running on 1 parallel resources...
 * Done with bf_traverse...
 * Waiting on 1222 set results...
 * Set results all available! (1222)
 * Finished consumeSet:
  * Set size: 1222
  * Set sum: 5778426
* Begin loading graph from /tmp/rand_40000_10000...
 * Graph loaded: 10000 vertices.  Neighbors of vertex 0: [1024,81,8150,71]
 * Time reading/parsing data: 0.032338s
  Approx getCPUTime calls per second: 676,620
CPU Frequency: 2,662,560,150, clocks per microsecond 2,662
* Beginning benchmark with k=5 and w=1000
All done.
SELFTIMED 1.229421s

Start time in cycles: 29,002,495,297,255
First hit in raw clock cycles was 550,133
 In nanoseconds: 206,618
FIRSTHIT 206618
   1,186,450,784 bytes allocated in the heap
      14,183,128 bytes copied during GC
       1,986,904 bytes maximum residency (5 sample(s))
          79,560 bytes maximum slop
               7 MB total memory in use (0 MB lost due to fragmentation)

                                    Tot time (elapsed)  Avg pause  Max pause
  Gen  0      2217 colls,     0 par    0.03s    0.03s     0.0000s    0.0014s
  Gen  1         5 colls,     0 par    0.02s    0.02s     0.0031s    0.0062s

  Parallel GC work balance: -nan (0 / 0, ideal 1)

                        MUT time (elapsed)       GC time  (elapsed)
  Task  0 (worker) :    1.16s    (  1.40s)       0.01s    (  0.01s)
  Task  1 (worker) :    0.00s    (  1.47s)       0.00s    (  0.00s)
  Task  2 (bound)  :    0.21s    (  1.44s)       0.03s    (  0.03s)

  SPARKS: 0 (0 converted, 0 overflowed, 0 dud, 0 GC'd, 0 fizzled)

  INIT    time    0.00s  (  0.00s elapsed)
  MUT     time    1.42s  (  1.42s elapsed)
  GC      time    0.04s  (  0.04s elapsed)
  EXIT    time    0.00s  (  0.00s elapsed)
  Total   time    1.47s  (  1.47s elapsed)

  Alloc rate    833,449,043 bytes per MUT second

  Productivity  97.1% of total user, 97.0% of total elapsed

gc_alloc_block_sync: 0
whitehole_spin: 0
gen[0].sync: 0
gen[1].sync: 0
1.47 real
   Run 1 of command succeeded
  +++ Executable appears self-timed!!:
SELFTIMED 1.229421s
Final Timings/Productivities: 
Median time (of 1): 
 >>> MIN/MEDIAN/MAX (TIME,PROD)  1.229421s 1.229421s 1.229421s   97.260 97.260 97.260

--------------------------------------------------------------------------------
  Running Config 2 of 486: BFS_LVar (args "/tmp/rand_40000_10000 5 1000") scheduler None  threads 2 (Env=[])
--------------------------------------------------------------------------------

(In directory /home/lkuper/repos/lvars/haskell-prototype)
Next run 'who', reporting users other than the current user.  This may help with detectivework.
Who_Output: 
Executing: ./ntimes_minmedmax 1 ./bin/BFS_LVar_None_threaded.exe /tmp/rand_40000_10000 5 1000 +RTS  -s  -qa  -s  -N2 -RTS
Execution log file: 
   ./runs/2013.03.28_BFS_LVar_None_threaded.exe__1364519193_1.log

Running trial 1 of 1:
------------------------------------------------------------
 * Running on 2 parallel resources...
 * Done with bf_traverse...
 * Waiting on 1222 set results...
 * Set results all available! (1222)
 * Finished consumeSet:
  * Set size: 1222
  * Set sum: 5778426
* Begin loading graph from /tmp/rand_40000_10000...
 * Graph loaded: 10000 vertices.  Neighbors of vertex 0: [1024,81,8150,71]
 * Time reading/parsing data: 0.036455s
  Approx getCPUTime calls per second: 581,200
CPU Frequency: 2,513,917,035, clocks per microsecond 2,513
* Beginning benchmark with k=5 and w=1000
All done.
SELFTIMED 0.581471s

Start time in cycles: 29,006,710,287,776
First hit in raw clock cycles was 405,454
 In nanoseconds: 161,283
FIRSTHIT 161283
   1,030,988,200 bytes allocated in the heap
      13,541,904 bytes copied during GC
       1,986,904 bytes maximum residency (5 sample(s))
          87,736 bytes maximum slop
               8 MB total memory in use (0 MB lost due to fragmentation)

                                    Tot time (elapsed)  Avg pause  Max pause
  Gen  0      1181 colls,  1180 par    0.05s    0.03s     0.0000s    0.0016s
  Gen  1         5 colls,     5 par    0.02s    0.01s     0.0023s    0.0034s

  Parallel GC work balance: 1.19 (1682409 / 1416208, ideal 2)

                        MUT time (elapsed)       GC time  (elapsed)
  Task  0 (worker) :    0.57s    (  0.76s)       0.04s    (  0.06s)
  Task  1 (worker) :    0.00s    (  0.81s)       0.00s    (  0.00s)
  Task  2 (bound)  :    0.20s    (  0.79s)       0.03s    (  0.03s)
  Task  3 (worker) :    0.57s    (  0.80s)       0.01s    (  0.01s)

  SPARKS: 0 (0 converted, 0 overflowed, 0 dud, 0 GC'd, 0 fizzled)

  INIT    time    0.00s  (  0.00s elapsed)
  MUT     time    1.35s  (  0.77s elapsed)
  GC      time    0.07s  (  0.04s elapsed)
  EXIT    time    0.00s  (  0.00s elapsed)
  Total   time    1.42s  (  0.81s elapsed)

  Alloc rate    763,964,425 bytes per MUT second

  Productivity  95.2% of total user, 165.7% of total elapsed

gc_alloc_block_sync: 3321
whitehole_spin: 0
gen[0].sync: 0
gen[1].sync: 0
0.81 real
   Run 1 of command succeeded
  +++ Executable appears self-timed!!:
SELFTIMED 0.581471s
Final Timings/Productivities: 
Median time (of 1): 
Read list of benchmarks/parameters from: benchlist.txt
